import java.util.zip.ZipFile

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: jetbrainsKotlin,       name: kotlinGradlePlugin,               version: kotlinVersion
        classpath group: 'org.junit.platform',  name: 'junit-platform-gradle-plugin',   version: '1.0.0-M4'
    }
}

version=daabPluginVersion
group=lisbCorp

ext {
    localDevelopment = project.file('install-local.gradle').exists()
}

subprojects {
    group = rootProject.group
    version = rootProject.version
}

project(':plugin') {
    apply plugin: kotlin
    apply plugin: 'org.junit.platform.gradle.plugin'
    if (localDevelopment) {
        apply from: rootProject.file('install-local.gradle')
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile     group: jetbrainsKotlin,         name: kotlinGradlePlugin,           version: kotlinVersion
        compile     group: jetbrainsKotlin,         name: 'kotlin-stdlib',              version: kotlinVersion
        compile     gradleApi()
        testCompile gradleTestKit()
        testCompile group: 'org.jetbrains.spek',    name: 'spek-api',                   version: '1.1.2'
        testRuntime group: 'org.jetbrains.spek',    name: 'spek-junit-platform-engine', version: '1.1.2'
    }

    tasks.withType(Jar) {
        it.baseName = rootProject.name
        it.appendix = project.name
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from tasks.javadoc
    }

    artifacts {
        archives tasks.sourcesJar, tasks.javadocJar
    }

    task versionProperties {
        description = 'generates kotlin version file'
        def targetFile = file("$projectDir/src/main/resources/kotlinVersion.properties")
        outputs.file targetFile
        doLast {
            def contents = """# auto generated file by $name
kotlinVersion=$kotlinVersion
"""
            targetFile.write(contents, 'UTF-8')
        }
    }

    task initProject(dependsOn: 'versionProperties', description: 'initialize project')
}

project(':types') {
    apply plugin: 'kotlin2js'
    if (localDevelopment) {
        apply from: rootProject.file('install-local.gradle')
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile     group: jetbrainsKotlin,     name: 'kotlin-stdlib-js',               version: kotlinVersion
    }

    compileKotlin2Js {
        kotlinOptions.outputFile = "build/js/daab-kt.js"
        kotlinOptions.sourceMap = true
        kotlinOptions.moduleKind = "commonjs"
    }

    tasks.withType(Jar) {
        it.baseName = 'daab'
        it.appendix = 'kt'
    } 

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from tasks.javadoc
    }

    artifacts {
        archives tasks.sourcesJar, tasks.javadocJar
    }
}

if (!file('install-local.gradle').exists()) {
    task generateInstallLocalGradle(group: 'dev-init') {
        doLast {
            file('install-local.gradle').write('apply plugin: "maven"', 'UTF-8')
        }
    }
}
